Class {
	#name : #Speed,
	#superclass : #Object,
	#instVars : [
		'shipsGame',
		'chosenShip'
	],
	#category : #'IngSoft2-Model'
}

{ #category : #initialization }
Speed class >> with: aShipsGame [ 
	^(self new) initializeWith: aShipsGame .
]

{ #category : #action }
Speed >> amountToChange [
	^1.
]

{ #category : #action }
Speed >> apply: aGameBoard [ 
	((aGameBoard shipWithNumber: (chosenShip numberOfShip))shipCards ) store: (self). 
	^(self)
]

{ #category : #action }
Speed >> from: aNumberOfShip applyTo: aChosenNumberOfShip [ 
	shipsGame chosen: self from: aNumberOfShip.
	shipsGame cardDirectedTo: aChosenNumberOfShip.
	shipsGame applyChosenCard.
]

{ #category : #initialization }
Speed >> initializeWith: aShipsGame [ 
	shipsGame := aShipsGame .
]

{ #category : #validation }
Speed >> permanent [
	^true
]

{ #category : #validation }
Speed >> permanent: aShipsGame verify: aNumberOfShip [ 
	(aShipsGame playerTurn: aNumberOfShip) ifTrue:[	
	(aShipsGame verify: self IsInHandOf: aNumberOfShip) ifTrue: [ 
			aShipsGame chosenCard: self ]. ] .
]

{ #category : #selection }
Speed >> selected: aShip [ 
	chosenShip := aShip .
]
